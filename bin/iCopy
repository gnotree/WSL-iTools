#!/usr/bin/env bash
# iCopy: copy ALL device .ips & diagnostics to ~/GNO-DATA/<ts>
# Flags:
#   -v, --verbose  : show progress lines from idevicecrashreport
#       --zip      : zip the folder after copy (fallback tar.gz if no zip)
# Notes:
#   Any --since provided is ignored (warn once).

set -euo pipefail

need(){ command -v "$1" >/dev/null 2>&1 || { echo "Missing: $1"; exit 127; }; }
usage(){ cat <<EOF
Usage: iCopy [-v|--verbose] [--zip]
Copies ALL existing crash/diagnostic reports from the device into a
timestamped folder under ~/GNO-DATA and (optionally) compresses it.
EOF
}

VERBOSE=0
DO_ZIP=0
WARNED=0

while [[ $# -gt 0 ]]; do
  case "$1" in
    -h|--help) usage; exit 0;;
    -v|--verbose) VERBOSE=1; shift;;
    --zip) DO_ZIP=1; shift;;
    --since) # ignore but warn once
      shift; [[ "$WARNED" -eq 0 ]] && { echo "[iCopy] '--since' is not supported and will be ignored."; WARNED=1; }
      [[ $# -gt 0 ]] && shift || true;;
    *) echo "Unknown option: $1"; usage; exit 2;;
  esac
done

need idevicepair
need idevicecrashreport

if ! idevicepair validate >/dev/null 2>&1; then
  echo "Device not paired. Try: idevicepair pair"
  exit 1
fi

ts="$(date +%Y%m%d_%H%M%S)"
outdir="${HOME}/GNO-DATA/${ts}"
mkdir -p "${outdir}"

if [[ "$VERBOSE" -eq 1 ]]; then
  echo "Collecting crash reports to ${outdir}"
  idevicecrashreport "${outdir}"
else
  # quiet: capture tool output but keep terminal clean, print final line
  idevicecrashreport "${outdir}" >/tmp/icopy.$$.log 2>&1 || true
  echo "Saved crash/diagnostic reports to ${outdir}"
fi

if [[ "$DO_ZIP" -eq 1 ]]; then
  base="$(basename "$outdir")"
  parent="$(dirname "$outdir")"
  if command -v zip >/dev/null 2>&1; then
    (cd "$parent" && zip -qr "${base}.zip" "${base}") || true
    [[ "$VERBOSE" -eq 1 ]] && echo "Archive: ${parent}/${base}.zip"
  else
    (cd "$parent" && tar -czf "${base}.tar.gz" "${base}") || true
    [[ "$VERBOSE" -eq 1 ]] && echo "Archive: ${parent}/${base}.tar.gz"
  fi
fi
