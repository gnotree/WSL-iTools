#!/usr/bin/env bash
# iCopy: snapshot iOS crash/diagnostic artifacts into ~/GNO-DATA/<ts>
# Options mirror iLive:
#   -s/--since DURATION | -S/--start WHEN | -E/--end WHEN | --zip | -v | -h
set -euo pipefail

usage(){
  sed -n '2,20p' "$0" | sed 's/^# \{0,1\}//'
  exit "${1:-0}"
}

need(){ command -v "$1" >/dev/null 2>&1 || { echo "Missing: $1"; exit 127; }; }
need idevicepair
need idevicecrashreport
need date
need find
need tar

since=""; start=""; end=""; make_zip=0; verbose=0
while [[ $# -gt 0 ]]; do
  case "$1" in
    -s|--since) since="${2:-}"; shift 2;;
    -S|--start) start="${2:-}"; shift 2;;
    -E|--end)   end="${2:-}";   shift 2;;
    --zip)      make_zip=1; shift;;
    -v|--verbose) verbose=1; shift;;
    -h|--help) usage 0;;
    *) echo "Unknown option: $1"; usage 2;;
  esac
done

if ! idevicepair validate >/dev/null 2>&1; then
  echo "Device not paired. Try: idevicepair pair"
  exit 1
fi

ts="$(date +%Y%m%d_%H%M%S)"
outdir="${HOME}/GNO-DATA/${ts}"
mkdir -p "$outdir"
tmpdir="$(mktemp -d)"
trap 'rm -rf "$tmpdir"' EXIT

echo "Collecting crash reports to ${outdir}"

# Use -o if supported, otherwise run in tmpdir CWD.
if idevicecrashreport -h 2>&1 | grep -q -- ' -o '; then
  idevicecrashreport -o "$tmpdir" >/dev/null
else
  (cd "$tmpdir" && idevicecrashreport . >/dev/null)
fi

cd "$tmpdir"

# Build find filters
find_args=(. -type f)
if [[ -n "$since" ]]; then
  if [[ "$since" =~ ^([0-9]+)([smhd])$ ]]; then
    n="${BASH_REMATCH[1]}"; u="${BASH_REMATCH[2]}"
    case "$u" in
      s) delta="$n seconds ago" ;;
      m) delta="$n minutes ago" ;;
      h) delta="$n hours ago" ;;
      d) delta="$n days ago" ;;
    esac
    start="$(date -d "$delta" '+%Y-%m-%d %H:%M:%S')"
  else
    start="$since"
  fi
fi
[[ -n "$start" ]] && find_args+=(-newermt "$start")
[[ -n "$end"   ]] && find_args+=(! -newermt "$end")

mapfile -d '' files < <(find "${find_args[@]}" -print0)
count=0
if ((${#files[@]})); then
  for f in "${files[@]}"; do
    rel="${f#./}"
    dest="${outdir}/${rel}"
    mkdir -p "$(dirname "$dest")"
    mv "$f" "$dest"
    (( verbose )) && echo "Move: ${dest}"
    ((count++)) || true
  done
fi

echo "Done. ${count} file(s) saved to ${outdir}"

if (( make_zip )); then
  (cd "$(dirname "$outdir")" && tar -czf "$(basename "$outdir").tgz" "$(basename "$outdir")")
  echo "Packed: ${outdir}.tgz"
fi
